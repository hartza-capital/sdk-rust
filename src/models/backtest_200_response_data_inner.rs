/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Backtest200ResponseDataInner {
    /// Money is the amount of money at the end of the backtest.
    #[serde(rename = "money", skip_serializing_if = "Option::is_none")]
    pub money: Option<f64>,
    /// Balance is the balance of the strategy. It is the amount of money at the end of the backtest.
    #[serde(rename = "balance", skip_serializing_if = "Option::is_none")]
    pub balance: Option<f64>,
    /// Performance is the performance of the strategy. It is the percentage of the performance of the strategy.
    #[serde(rename = "performance", skip_serializing_if = "Option::is_none")]
    pub performance: Option<f64>,
    #[serde(rename = "buy", skip_serializing_if = "Option::is_none")]
    pub buy: Option<Box<models::Backtest200ResponseDataInnerBuy>>,
    #[serde(rename = "sell", skip_serializing_if = "Option::is_none")]
    pub sell: Option<Box<models::Backtest200ResponseDataInnerSell>>,
}

impl Backtest200ResponseDataInner {
    pub fn new() -> Backtest200ResponseDataInner {
        Backtest200ResponseDataInner {
            money: None,
            balance: None,
            performance: None,
            buy: None,
            sell: None,
        }
    }
}

