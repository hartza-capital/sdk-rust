/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1ScreenerQueryRequest : GetFilterResponse is used to specify the response for the GetFilter API.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ScreenerQueryRequest {
    /// Fields is the list of fields to return.
    #[serde(rename = "fields", skip_serializing_if = "Option::is_none")]
    pub fields: Option<Vec<String>>,
    /// Filters is a list of filters.
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<models::V1ScreenerFilter>>,
    #[serde(rename = "sort", skip_serializing_if = "Option::is_none")]
    pub sort: Option<Box<models::V1ScreenerSort>>,
    #[serde(rename = "pagination", skip_serializing_if = "Option::is_none")]
    pub pagination: Option<Box<models::V1ScreenerPagination>>,
}

impl V1ScreenerQueryRequest {
    /// GetFilterResponse is used to specify the response for the GetFilter API.
    pub fn new() -> V1ScreenerQueryRequest {
        V1ScreenerQueryRequest {
            fields: None,
            filters: None,
            sort: None,
            pagination: None,
        }
    }
}

