/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LastsStrategyQuotes200ResponseDataValue {
    /// Status is the status of the strategy.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<String>,
    /// Open is the open price of the security.
    #[serde(rename = "open", skip_serializing_if = "Option::is_none")]
    pub open: Option<f64>,
    /// Now is the current price of the security.
    #[serde(rename = "close", skip_serializing_if = "Option::is_none")]
    pub close: Option<f64>,
    /// Timestamp (in Unix epoch seconds) when this resource was initially created in the system.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
}

impl LastsStrategyQuotes200ResponseDataValue {
    pub fn new() -> LastsStrategyQuotes200ResponseDataValue {
        LastsStrategyQuotes200ResponseDataValue {
            status: None,
            open: None,
            close: None,
            created_at: None,
        }
    }
}

