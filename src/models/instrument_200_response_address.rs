/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Instrument200ResponseAddress {
    /// Streets is the street address of the instrument.
    #[serde(rename = "streets", skip_serializing_if = "Option::is_none")]
    pub streets: Option<Vec<String>>,
    /// City is the city where the instrument is located.
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// State is the state where the instrument is located. Ex: CA for California.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// Country is the country where the instrument is located. ISO 3166-1 alpha-2 code.
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
}

impl Instrument200ResponseAddress {
    pub fn new() -> Instrument200ResponseAddress {
        Instrument200ResponseAddress {
            streets: None,
            city: None,
            state: None,
            country: None,
        }
    }
}

