/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ListPortfoliosResponseResultInstrumentsInnerInstrument {
    /// Id is the unique identifier for the instrument.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Ticker is the unique identifier for the instrument.
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    /// Exchange is the exchange where the instrument is traded.
    #[serde(rename = "exchange", skip_serializing_if = "Option::is_none")]
    pub exchange: Option<String>,
    /// Asset is the asset class of the instrument.
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<String>,
}

impl V1ListPortfoliosResponseResultInstrumentsInnerInstrument {
    pub fn new() -> V1ListPortfoliosResponseResultInstrumentsInnerInstrument {
        V1ListPortfoliosResponseResultInstrumentsInnerInstrument {
            id: None,
            ticker: None,
            exchange: None,
            asset: None,
        }
    }
}

