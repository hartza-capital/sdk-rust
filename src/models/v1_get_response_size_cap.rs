/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1GetResponseSizeCap : GetResponseSizeCap is used to show the size cap of the exchange.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1GetResponseSizeCap {
    /// Name is the name of the size cap.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<Name>,
    /// Max is the maximum size cap of the exchange.
    #[serde(rename = "max", skip_serializing_if = "Option::is_none")]
    pub max: Option<i64>,
    /// Min is the minimum size cap of the exchange.
    #[serde(rename = "min", skip_serializing_if = "Option::is_none")]
    pub min: Option<i64>,
}

impl V1GetResponseSizeCap {
    /// GetResponseSizeCap is used to show the size cap of the exchange.
    pub fn new() -> V1GetResponseSizeCap {
        V1GetResponseSizeCap {
            name: None,
            max: None,
            min: None,
        }
    }
}
/// Name is the name of the size cap.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Name {
    #[serde(rename = "BIGCAP")]
    Bigcap,
    #[serde(rename = "MIDCAP")]
    Midcap,
    #[serde(rename = "SMALLCAP")]
    Smallcap,
}

impl Default for Name {
    fn default() -> Name {
        Self::Bigcap
    }
}

