/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Exchange200ResponseHolidaysInner {
    /// Name is the name of the holiday.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description is the description of the holiday.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Date is the date of the holiday.
    #[serde(rename = "date", skip_serializing_if = "Option::is_none")]
    pub date: Option<String>,
    /// Official is a boolean value that indicates if the holiday is an official holiday.
    #[serde(rename = "official", skip_serializing_if = "Option::is_none")]
    pub official: Option<bool>,
}

impl Exchange200ResponseHolidaysInner {
    pub fn new() -> Exchange200ResponseHolidaysInner {
        Exchange200ResponseHolidaysInner {
            name: None,
            description: None,
            date: None,
            official: None,
        }
    }
}

