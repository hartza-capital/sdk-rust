/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Instrument200ResponseStats {
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<String>,
    /// MarketCapUSD is the market capitalization of the security in USD.
    #[serde(rename = "market_cap_usd", skip_serializing_if = "Option::is_none")]
    pub market_cap_usd: Option<i64>,
    /// DividendYield is the dividend yield of the security.
    #[serde(rename = "dividend_yield", skip_serializing_if = "Option::is_none")]
    pub dividend_yield: Option<f64>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<Box<models::StatsResponsePrice>>,
    #[serde(rename = "volumes", skip_serializing_if = "Option::is_none")]
    pub volumes: Option<Box<models::StatsResponseVolumes>>,
    /// Timestamp (in Unix epoch seconds) when this resource was last modified.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
}

impl Instrument200ResponseStats {
    pub fn new() -> Instrument200ResponseStats {
        Instrument200ResponseStats {
            size: None,
            market_cap_usd: None,
            dividend_yield: None,
            price: None,
            volumes: None,
            updated_at: None,
        }
    }
}

