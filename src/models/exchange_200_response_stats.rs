/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Exchange200ResponseStats {
    /// MarketCapUSD is the market capitalization of the exchange in USD.
    #[serde(rename = "market_cap_usd", skip_serializing_if = "Option::is_none")]
    pub market_cap_usd: Option<i64>,
    /// Instruments is the number of instruments that the exchange has.
    #[serde(rename = "instruments", skip_serializing_if = "Option::is_none")]
    pub instruments: Option<i64>,
    #[serde(rename = "volumes", skip_serializing_if = "Option::is_none")]
    pub volumes: Option<Box<models::StatsResponseVolumes>>,
    /// Timestamp (in Unix epoch seconds) when this resource was last modified.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
}

impl Exchange200ResponseStats {
    pub fn new() -> Exchange200ResponseStats {
        Exchange200ResponseStats {
            market_cap_usd: None,
            instruments: None,
            volumes: None,
            updated_at: None,
        }
    }
}

