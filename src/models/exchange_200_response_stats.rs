/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Exchange200ResponseStats {
    /// MarketCapUSD is the market capitalization of the exchange in USD.
    #[serde(rename = "market_cap_usd", skip_serializing_if = "Option::is_none")]
    pub market_cap_usd: Option<i64>,
    /// Instruments is the number of instruments that the exchange has.
    #[serde(rename = "instruments", skip_serializing_if = "Option::is_none")]
    pub instruments: Option<i64>,
    #[serde(rename = "volumes", skip_serializing_if = "Option::is_none")]
    pub volumes: Option<Box<models::StatsResponseVolumes>>,
    /// UpdatedAt is the date and time when the exchange was last updated.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
}

impl Exchange200ResponseStats {
    pub fn new() -> Exchange200ResponseStats {
        Exchange200ResponseStats {
            market_cap_usd: None,
            instruments: None,
            volumes: None,
            updated_at: None,
        }
    }
}

