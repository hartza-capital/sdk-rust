/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1StrategyResponse : GetStrategiesResponse is used to specify the response for the GetStrategies API.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1StrategyResponse {
    /// Ticker is the unique identifier for the strategy.
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    /// Ref is the reference of the strategy.
    #[serde(rename = "ref", skip_serializing_if = "Option::is_none")]
    pub r#ref: Option<String>,
    /// Interval is the interval of the strategy.
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<String>,
    /// Name is the name of the strategy.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description is the description of the strategy.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Parameters is a map of parameters used by the strategy.
    #[serde(rename = "parameters", skip_serializing_if = "Option::is_none")]
    pub parameters: Option<std::collections::HashMap<String, f64>>,
    /// Timestamp (in Unix epoch seconds) when this resource was initially created in the system.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
    /// Timestamp (in Unix epoch seconds) when this resource was last modified.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
}

impl V1StrategyResponse {
    /// GetStrategiesResponse is used to specify the response for the GetStrategies API.
    pub fn new() -> V1StrategyResponse {
        V1StrategyResponse {
            ticker: None,
            r#ref: None,
            interval: None,
            name: None,
            description: None,
            parameters: None,
            created_at: None,
            updated_at: None,
        }
    }
}

