/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchIndexes200ResponseDataInner {
    /// Ticker is the unique identifier for the index.
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    /// Exchange is the exchange of the index.
    #[serde(rename = "exchange", skip_serializing_if = "Option::is_none")]
    pub exchange: Option<String>,
    /// Name is the name of the index.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// History is the historical values of the index.
    #[serde(rename = "history", skip_serializing_if = "Option::is_none")]
    pub history: Option<Vec<f32>>,
    /// Change is the change in the price of the index.
    #[serde(rename = "change", skip_serializing_if = "Option::is_none")]
    pub change: Option<f32>,
    /// Last is the last value of the index.
    #[serde(rename = "last", skip_serializing_if = "Option::is_none")]
    pub last: Option<f32>,
    /// Start is the start value of the index.
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<f32>,
    /// MaxAnnual is the maximum annual value of the index.
    #[serde(rename = "max_annual", skip_serializing_if = "Option::is_none")]
    pub max_annual: Option<f32>,
    /// MinAnnual is the minimum annual value of the index.
    #[serde(rename = "min_annual", skip_serializing_if = "Option::is_none")]
    pub min_annual: Option<f32>,
    /// ReturnYear is the return year of the index.
    #[serde(rename = "return_year", skip_serializing_if = "Option::is_none")]
    pub return_year: Option<f32>,
    /// UpdatedAt is the last update date of the index.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
}

impl SearchIndexes200ResponseDataInner {
    pub fn new() -> SearchIndexes200ResponseDataInner {
        SearchIndexes200ResponseDataInner {
            ticker: None,
            exchange: None,
            name: None,
            history: None,
            change: None,
            last: None,
            start: None,
            max_annual: None,
            min_annual: None,
            return_year: None,
            updated_at: None,
        }
    }
}

