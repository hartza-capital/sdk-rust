/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1ScreenerFilter : Filter is used to specify the filter for a search.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ScreenerFilter {
    #[serde(rename = "condition", skip_serializing_if = "Option::is_none")]
    pub condition: Option<Condition>,
    #[serde(rename = "field", skip_serializing_if = "Option::is_none")]
    pub field: Option<Field>,
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<Vec<String>>,
}

impl V1ScreenerFilter {
    /// Filter is used to specify the filter for a search.
    pub fn new() -> V1ScreenerFilter {
        V1ScreenerFilter {
            condition: None,
            field: None,
            values: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Condition {
    #[serde(rename = "Equal")]
    Equal,
    #[serde(rename = "GreaterEqual")]
    GreaterEqual,
    #[serde(rename = "LessEqual")]
    LessEqual,
    #[serde(rename = "Less")]
    Less,
    #[serde(rename = "Greater")]
    Greater,
    #[serde(rename = "Between")]
    Between,
    #[serde(rename = "In")]
    In,
    #[serde(rename = "NotIn")]
    NotIn,
}

impl Default for Condition {
    fn default() -> Condition {
        Self::Equal
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Field {
    #[serde(rename = "id")]
    Id,
    #[serde(rename = "ticker")]
    Ticker,
    #[serde(rename = "exchange")]
    Exchange,
    #[serde(rename = "currency")]
    Currency,
    #[serde(rename = "indicator")]
    Indicator,
    #[serde(rename = "time")]
    Time,
    #[serde(rename = "asset")]
    Asset,
    #[serde(rename = "region")]
    Region,
    #[serde(rename = "country")]
    Country,
    #[serde(rename = "strategy")]
    Strategy,
    #[serde(rename = "activity")]
    Activity,
    #[serde(rename = "status")]
    Status,
    #[serde(rename = "size")]
    Size,
    #[serde(rename = "from")]
    From,
    #[serde(rename = "to")]
    To,
}

impl Default for Field {
    fn default() -> Field {
        Self::Id
    }
}

