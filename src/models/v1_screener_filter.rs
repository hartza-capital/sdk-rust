/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1ScreenerFilter : Filter is used to specify the filter for a search.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ScreenerFilter {
    #[serde(rename = "operator", skip_serializing_if = "Option::is_none")]
    pub operator: Option<Operator>,
    #[serde(rename = "argument", skip_serializing_if = "Option::is_none")]
    pub argument: Option<Argument>,
    #[serde(rename = "values", skip_serializing_if = "Option::is_none")]
    pub values: Option<Vec<String>>,
}

impl V1ScreenerFilter {
    /// Filter is used to specify the filter for a search.
    pub fn new() -> V1ScreenerFilter {
        V1ScreenerFilter {
            operator: None,
            argument: None,
            values: None,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Operator {
    #[serde(rename = "Equal")]
    Equal,
    #[serde(rename = "GreaterEqual")]
    GreaterEqual,
    #[serde(rename = "LessEqual")]
    LessEqual,
    #[serde(rename = "Less")]
    Less,
    #[serde(rename = "Greater")]
    Greater,
    #[serde(rename = "Between")]
    Between,
    #[serde(rename = "In")]
    In,
    #[serde(rename = "NotIn")]
    NotIn,
}

impl Default for Operator {
    fn default() -> Operator {
        Self::Equal
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Argument {
    #[serde(rename = "id")]
    Id,
    #[serde(rename = "ticker")]
    Ticker,
    #[serde(rename = "exchange")]
    Exchange,
    #[serde(rename = "currency")]
    Currency,
    #[serde(rename = "indicator")]
    Indicator,
    #[serde(rename = "time")]
    Time,
    #[serde(rename = "asset")]
    Asset,
    #[serde(rename = "region")]
    Region,
    #[serde(rename = "country")]
    Country,
    #[serde(rename = "strategy")]
    Strategy,
    #[serde(rename = "activity")]
    Activity,
    #[serde(rename = "status")]
    Status,
    #[serde(rename = "size")]
    Size,
    #[serde(rename = "from")]
    From,
    #[serde(rename = "to")]
    To,
}

impl Default for Argument {
    fn default() -> Argument {
        Self::Id
    }
}

