/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Country200ResponseTelecom {
    /// InternationalPrefix is the international prefix of the country. Example: 33 for France.
    #[serde(rename = "international_prefix", skip_serializing_if = "Option::is_none")]
    pub international_prefix: Option<String>,
    /// CallingCodes is the list of calling codes of the country. Example: 33 for France.
    #[serde(rename = "calling_codes", skip_serializing_if = "Option::is_none")]
    pub calling_codes: Option<Vec<String>>,
    /// TLDs is the list of top level domains of the country. Example: .fr for France.
    #[serde(rename = "tlds", skip_serializing_if = "Option::is_none")]
    pub tlds: Option<Vec<String>>,
}

impl Country200ResponseTelecom {
    pub fn new() -> Country200ResponseTelecom {
        Country200ResponseTelecom {
            international_prefix: None,
            calling_codes: None,
            tlds: None,
        }
    }
}

