/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FilterReportById200ResponseAllocation {
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
    #[serde(rename = "total_fx", skip_serializing_if = "Option::is_none")]
    pub total_fx: Option<f64>,
    #[serde(rename = "unit_position", skip_serializing_if = "Option::is_none")]
    pub unit_position: Option<f64>,
    #[serde(rename = "max_positions", skip_serializing_if = "Option::is_none")]
    pub max_positions: Option<i32>,
    #[serde(rename = "orders", skip_serializing_if = "Option::is_none")]
    pub orders: Option<std::collections::HashMap<String, models::FilterReportById200ResponseAllocationOrdersValue>>,
    #[serde(rename = "count", skip_serializing_if = "Option::is_none")]
    pub count: Option<i32>,
}

impl FilterReportById200ResponseAllocation {
    pub fn new() -> FilterReportById200ResponseAllocation {
        FilterReportById200ResponseAllocation {
            currency: None,
            total_fx: None,
            unit_position: None,
            max_positions: None,
            orders: None,
            count: None,
        }
    }
}

