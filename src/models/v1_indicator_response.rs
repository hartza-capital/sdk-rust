/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1IndicatorResponse : GetResponseIndicator is used to specify the response for the GetIndicator API.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1IndicatorResponse {
    /// Ticker is the unique identifier for the indicator.
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    /// Name is the name of the indicator. It is the human readable name of the indicator.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Interval is the interval of the indicator. It is the time period of the indicator.
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<String>,
    /// Level is the level of the indicator. It is the level of the indicator.
    #[serde(rename = "level", skip_serializing_if = "Option::is_none")]
    pub level: Option<Level>,
}

impl V1IndicatorResponse {
    /// GetResponseIndicator is used to specify the response for the GetIndicator API.
    pub fn new() -> V1IndicatorResponse {
        V1IndicatorResponse {
            ticker: None,
            name: None,
            interval: None,
            level: None,
        }
    }
}
/// Level is the level of the indicator. It is the level of the indicator.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Level {
    #[serde(rename = "UNKNOWN")]
    Unknown,
    #[serde(rename = "HIGH")]
    High,
    #[serde(rename = "MEDIUM")]
    Medium,
    #[serde(rename = "LOW")]
    Low,
}

impl Default for Level {
    fn default() -> Level {
        Self::Unknown
    }
}

