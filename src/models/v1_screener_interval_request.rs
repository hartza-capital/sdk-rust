/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// V1ScreenerIntervalRequest : ScreenerRequestSort is used to specify the sort for a search.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ScreenerIntervalRequest {
    /// Interval is the interval of the screener.
    #[serde(rename = "interval", skip_serializing_if = "Option::is_none")]
    pub interval: Option<Interval>,
    /// Filters is a list of filters.
    #[serde(rename = "filters", skip_serializing_if = "Option::is_none")]
    pub filters: Option<Vec<models::V1ScreenerFilter>>,
}

impl V1ScreenerIntervalRequest {
    /// ScreenerRequestSort is used to specify the sort for a search.
    pub fn new() -> V1ScreenerIntervalRequest {
        V1ScreenerIntervalRequest {
            interval: None,
            filters: None,
        }
    }
}
/// Interval is the interval of the screener.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Interval {
    #[serde(rename = "D")]
    D,
    #[serde(rename = "W")]
    W,
    #[serde(rename = "M")]
    M,
    #[serde(rename = "Q")]
    Q,
    #[serde(rename = "Y")]
    Y,
}

impl Default for Interval {
    fn default() -> Interval {
        Self::D
    }
}

