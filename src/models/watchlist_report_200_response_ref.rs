/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WatchlistReport200ResponseRef {
    /// Instruments is the list of instruments that the filter is applied to.
    #[serde(rename = "instruments", skip_serializing_if = "Option::is_none")]
    pub instruments: Option<std::collections::HashMap<String, String>>,
    /// Activities is the list of activities that the filter is applied to.
    #[serde(rename = "actitivies", skip_serializing_if = "Option::is_none")]
    pub actitivies: Option<std::collections::HashMap<String, String>>,
    /// Countries is the list of countries that the filter is applied to.
    #[serde(rename = "countries", skip_serializing_if = "Option::is_none")]
    pub countries: Option<std::collections::HashMap<String, String>>,
}

impl WatchlistReport200ResponseRef {
    pub fn new() -> WatchlistReport200ResponseRef {
        WatchlistReport200ResponseRef {
            instruments: None,
            actitivies: None,
            countries: None,
        }
    }
}

