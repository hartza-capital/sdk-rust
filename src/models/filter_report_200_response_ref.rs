/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct FilterReport200ResponseRef {
    /// Instruments is the list of instruments that the filter is applied to.
    #[serde(rename = "instruments", skip_serializing_if = "Option::is_none")]
    pub instruments: Option<std::collections::HashMap<String, String>>,
    /// Activities is the list of activities that the filter is applied to.
    #[serde(rename = "actitivies", skip_serializing_if = "Option::is_none")]
    pub actitivies: Option<std::collections::HashMap<String, String>>,
    /// Countries is the list of countries that the filter is applied to.
    #[serde(rename = "countries", skip_serializing_if = "Option::is_none")]
    pub countries: Option<std::collections::HashMap<String, String>>,
}

impl FilterReport200ResponseRef {
    pub fn new() -> FilterReport200ResponseRef {
        FilterReport200ResponseRef {
            instruments: None,
            actitivies: None,
            countries: None,
        }
    }
}

