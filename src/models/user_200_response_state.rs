/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// User200ResponseState : State is the state of the user.
#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct User200ResponseState {
    /// Status is the status of the user.
    #[serde(rename = "status", skip_serializing_if = "Option::is_none")]
    pub status: Option<Status>,
    /// AuthTime is the time at which the user was authenticated.
    #[serde(rename = "auth_time", skip_serializing_if = "Option::is_none")]
    pub auth_time: Option<i64>,
}

impl User200ResponseState {
    /// State is the state of the user.
    pub fn new() -> User200ResponseState {
        User200ResponseState {
            status: None,
            auth_time: None,
        }
    }
}
/// Status is the status of the user.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Status {
    #[serde(rename = "active")]
    Active,
    #[serde(rename = "inactive")]
    Inactive,
}

impl Default for Status {
    fn default() -> Status {
        Self::Active
    }
}

