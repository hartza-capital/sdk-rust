/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Commodity200Response {
    /// Ticker is the unique identifier for the commodity.
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    /// Name is the name of the commodity. Ex: Gold.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Description is the description of the commodity.
    #[serde(rename = "description", skip_serializing_if = "Option::is_none")]
    pub description: Option<String>,
    /// Activities is a map of activities that the commodity is involved in.
    #[serde(rename = "activities", skip_serializing_if = "Option::is_none")]
    pub activities: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "quote", skip_serializing_if = "Option::is_none")]
    pub quote: Option<Box<models::V1QuoteResponse>>,
    #[serde(rename = "stats", skip_serializing_if = "Option::is_none")]
    pub stats: Option<Box<models::V1StatsResponse>>,
}

impl Commodity200Response {
    pub fn new() -> Commodity200Response {
        Commodity200Response {
            ticker: None,
            name: None,
            description: None,
            activities: None,
            quote: None,
            stats: None,
        }
    }
}

