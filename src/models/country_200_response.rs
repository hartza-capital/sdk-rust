/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Country200Response {
    /// Ticker is the unique identifier for the country (alpha 2).
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    /// TickerAlternative is the alternative unique identifier for the country.
    #[serde(rename = "ticker_alternative", skip_serializing_if = "Option::is_none")]
    pub ticker_alternative: Option<String>,
    /// Name is the name of the country. It is the human readable name of the country.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Languages is the list of languages used in the country. Example: French for France.
    #[serde(rename = "languages", skip_serializing_if = "Option::is_none")]
    pub languages: Option<std::collections::HashMap<String, String>>,
    #[serde(rename = "economic", skip_serializing_if = "Option::is_none")]
    pub economic: Option<Box<models::Country200ResponseEconomic>>,
    #[serde(rename = "telecom", skip_serializing_if = "Option::is_none")]
    pub telecom: Option<Box<models::Country200ResponseTelecom>>,
    #[serde(rename = "geographic", skip_serializing_if = "Option::is_none")]
    pub geographic: Option<Box<models::Country200ResponseGeographic>>,
    /// Indicators is the list of MacroEconomic indicators used in the country. Example: GDP for France.
    #[serde(rename = "indicators", skip_serializing_if = "Option::is_none")]
    pub indicators: Option<std::collections::HashMap<String, models::Country200ResponseIndicatorsValue>>,
}

impl Country200Response {
    pub fn new() -> Country200Response {
        Country200Response {
            ticker: None,
            ticker_alternative: None,
            name: None,
            languages: None,
            economic: None,
            telecom: None,
            geographic: None,
            indicators: None,
        }
    }
}

