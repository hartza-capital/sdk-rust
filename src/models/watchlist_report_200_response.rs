/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct WatchlistReport200Response {
    /// Name of the filter
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Strategy of the filter
    #[serde(rename = "strategy", skip_serializing_if = "Option::is_none")]
    pub strategy: Option<String>,
    /// Start date of the filter
    #[serde(rename = "start", skip_serializing_if = "Option::is_none")]
    pub start: Option<i64>,
    #[serde(rename = "ref", skip_serializing_if = "Option::is_none")]
    pub r#ref: Option<Box<models::WatchlistReport200ResponseRef>>,
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<std::collections::HashMap<String, models::WatchlistReport200ResponseCurrencyValue>>,
    #[serde(rename = "asset", skip_serializing_if = "Option::is_none")]
    pub asset: Option<std::collections::HashMap<String, models::WatchlistReport200ResponseAssetValue>>,
    #[serde(rename = "activities", skip_serializing_if = "Option::is_none")]
    pub activities: Option<std::collections::HashMap<String, models::WatchlistReport200ResponseAssetValue>>,
    #[serde(rename = "geographic", skip_serializing_if = "Option::is_none")]
    pub geographic: Option<Box<models::WatchlistReport200ResponseGeographic>>,
    #[serde(rename = "performance", skip_serializing_if = "Option::is_none")]
    pub performance: Option<Box<models::WatchlistReport200ResponsePerformance>>,
    #[serde(rename = "allocation", skip_serializing_if = "Option::is_none")]
    pub allocation: Option<Box<models::WatchlistReport200ResponseAllocation>>,
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
}

impl WatchlistReport200Response {
    pub fn new() -> WatchlistReport200Response {
        WatchlistReport200Response {
            name: None,
            strategy: None,
            start: None,
            r#ref: None,
            currency: None,
            asset: None,
            activities: None,
            geographic: None,
            performance: None,
            allocation: None,
            created_at: None,
        }
    }
}

