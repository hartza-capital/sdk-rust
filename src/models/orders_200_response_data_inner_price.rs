/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct Orders200ResponseDataInnerPrice {
    /// Unit is the price per unit.
    #[serde(rename = "ask", skip_serializing_if = "Option::is_none")]
    pub ask: Option<f64>,
    /// Total is the total price.
    #[serde(rename = "bought", skip_serializing_if = "Option::is_none")]
    pub bought: Option<f64>,
    /// Commission is the commission of the orders.
    #[serde(rename = "commission", skip_serializing_if = "Option::is_none")]
    pub commission: Option<f64>,
    /// Currency is the currency of the price.
    #[serde(rename = "currency", skip_serializing_if = "Option::is_none")]
    pub currency: Option<String>,
}

impl Orders200ResponseDataInnerPrice {
    pub fn new() -> Orders200ResponseDataInnerPrice {
        Orders200ResponseDataInnerPrice {
            ask: None,
            bought: None,
            commission: None,
            currency: None,
        }
    }
}

