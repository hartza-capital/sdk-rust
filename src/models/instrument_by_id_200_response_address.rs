/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InstrumentById200ResponseAddress {
    /// Streets is the street address of the instrument.
    #[serde(rename = "streets", skip_serializing_if = "Option::is_none")]
    pub streets: Option<Vec<String>>,
    /// City is the city where the instrument is located.
    #[serde(rename = "city", skip_serializing_if = "Option::is_none")]
    pub city: Option<String>,
    /// State is the state where the instrument is located. Ex: CA for California.
    #[serde(rename = "state", skip_serializing_if = "Option::is_none")]
    pub state: Option<String>,
    /// Country is the country where the instrument is located. ISO 3166-1 alpha-2 code.
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<String>,
}

impl InstrumentById200ResponseAddress {
    pub fn new() -> InstrumentById200ResponseAddress {
        InstrumentById200ResponseAddress {
            streets: None,
            city: None,
            state: None,
            country: None,
        }
    }
}

