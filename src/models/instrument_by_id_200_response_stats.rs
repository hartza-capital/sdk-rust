/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct InstrumentById200ResponseStats {
    #[serde(rename = "size", skip_serializing_if = "Option::is_none")]
    pub size: Option<String>,
    /// MarketCapUSD is the market capitalization of the security in USD.
    #[serde(rename = "market_cap_usd", skip_serializing_if = "Option::is_none")]
    pub market_cap_usd: Option<i64>,
    /// DividendYield is the dividend yield of the security.
    #[serde(rename = "dividend_yield", skip_serializing_if = "Option::is_none")]
    pub dividend_yield: Option<f64>,
    #[serde(rename = "price", skip_serializing_if = "Option::is_none")]
    pub price: Option<Box<models::StatsResponsePrice>>,
    #[serde(rename = "volumes", skip_serializing_if = "Option::is_none")]
    pub volumes: Option<Box<models::StatsResponseVolumes>>,
    /// UpdatedAt is the date and time when the stats were last updated.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
}

impl InstrumentById200ResponseStats {
    pub fn new() -> InstrumentById200ResponseStats {
        InstrumentById200ResponseStats {
            size: None,
            market_cap_usd: None,
            dividend_yield: None,
            price: None,
            volumes: None,
            updated_at: None,
        }
    }
}

