/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct IndexByTicker200Response {
    /// Ticker is the unique identifier for the security.
    #[serde(rename = "ticker", skip_serializing_if = "Option::is_none")]
    pub ticker: Option<String>,
    /// Name is the name of the security.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Exchange is the exchange where the security is traded.
    #[serde(rename = "exchange", skip_serializing_if = "Option::is_none")]
    pub exchange: Option<String>,
    /// Country is a boolean value that indicates if the security is the principal country index.
    #[serde(rename = "country", skip_serializing_if = "Option::is_none")]
    pub country: Option<bool>,
    /// Activity is a map of activities that the security is involved in.
    #[serde(rename = "activity", skip_serializing_if = "Option::is_none")]
    pub activity: Option<std::collections::HashMap<String, String>>,
    /// SubIndexes is a list of indexes that are part of the security.
    #[serde(rename = "sub_indexes", skip_serializing_if = "Option::is_none")]
    pub sub_indexes: Option<Vec<String>>,
    /// Size of index
    #[serde(rename = "sizecap", skip_serializing_if = "Option::is_none")]
    pub sizecap: Option<String>,
    #[serde(rename = "quote", skip_serializing_if = "Option::is_none")]
    pub quote: Option<Box<models::V1QuoteResponse>>,
    #[serde(rename = "stats", skip_serializing_if = "Option::is_none")]
    pub stats: Option<Box<models::V1StatsResponse>>,
}

impl IndexByTicker200Response {
    pub fn new() -> IndexByTicker200Response {
        IndexByTicker200Response {
            ticker: None,
            name: None,
            exchange: None,
            country: None,
            activity: None,
            sub_indexes: None,
            sizecap: None,
            quote: None,
            stats: None,
        }
    }
}

