/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ListPortfoliosResponseResultInstrumentsInnerCost {
    /// Unit is the cost per unit.
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<f32>,
    /// Total is the total cost.
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f32>,
    /// TotalFX is the total cost in the base currency.
    #[serde(rename = "total_fx", skip_serializing_if = "Option::is_none")]
    pub total_fx: Option<f32>,
    /// AllocationPercent is the allocation percentage.
    #[serde(rename = "allocation_percent", skip_serializing_if = "Option::is_none")]
    pub allocation_percent: Option<f32>,
}

impl V1ListPortfoliosResponseResultInstrumentsInnerCost {
    pub fn new() -> V1ListPortfoliosResponseResultInstrumentsInnerCost {
        V1ListPortfoliosResponseResultInstrumentsInnerCost {
            unit: None,
            total: None,
            total_fx: None,
            allocation_percent: None,
        }
    }
}

