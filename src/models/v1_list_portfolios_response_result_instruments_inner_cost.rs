/*
 * API Hartza Capital
 *
 * ## Welcome to the Hartza Capital API documentation  This comprehensive financial data API provides access to market information, portfolio management capabilities, and sophisticated trading tools.  For production use, an OAuth2 token is required. After authentication, you'll receive a token with a 15-minute lifespan.  When this period expires, please use your refresh token to obtain a new access token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct V1ListPortfoliosResponseResultInstrumentsInnerCost {
    /// Unit is the cost per unit.
    #[serde(rename = "unit", skip_serializing_if = "Option::is_none")]
    pub unit: Option<f64>,
    /// Total is the total cost.
    #[serde(rename = "total", skip_serializing_if = "Option::is_none")]
    pub total: Option<f64>,
    /// TotalFX is the total cost in the base currency.
    #[serde(rename = "total_fx", skip_serializing_if = "Option::is_none")]
    pub total_fx: Option<f64>,
    /// AllocationPercent is the allocation percentage.
    #[serde(rename = "allocation_percent", skip_serializing_if = "Option::is_none")]
    pub allocation_percent: Option<f64>,
}

impl V1ListPortfoliosResponseResultInstrumentsInnerCost {
    pub fn new() -> V1ListPortfoliosResponseResultInstrumentsInnerCost {
        V1ListPortfoliosResponseResultInstrumentsInnerCost {
            unit: None,
            total: None,
            total_fx: None,
            allocation_percent: None,
        }
    }
}

