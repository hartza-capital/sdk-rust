/*
 * API Hartza Capital
 *
 * ## Welcome on the Hartza Capital API documentation  For production use, you must obtain an oAuth2 token. To have this token, please authenticate and use your token.    The token has a lifespan of 15 minutes, after this period please renew it with the refresh token. 
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: support@hartza.capital
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchNews200ResponseDataInner {
    /// Id is the unique identifier for the news.
    #[serde(rename = "id", skip_serializing_if = "Option::is_none")]
    pub id: Option<String>,
    /// Name is the name of the news.
    #[serde(rename = "title", skip_serializing_if = "Option::is_none")]
    pub title: Option<String>,
    /// URL of the news.
    #[serde(rename = "url", skip_serializing_if = "Option::is_none")]
    pub url: Option<String>,
    /// Source name of the news.
    #[serde(rename = "source", skip_serializing_if = "Option::is_none")]
    pub source: Option<String>,
    /// Language of the news.
    #[serde(rename = "language", skip_serializing_if = "Option::is_none")]
    pub language: Option<String>,
    /// CreatedAt is the date and time of the last update.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
}

impl SearchNews200ResponseDataInner {
    pub fn new() -> SearchNews200ResponseDataInner {
        SearchNews200ResponseDataInner {
            id: None,
            title: None,
            url: None,
            source: None,
            language: None,
            created_at: None,
        }
    }
}

